{
  "name": "Elizabeth",
  "tagline": "Elizabeth is a library to generate dummy data. This library easy to use and very useful when you need to bootstrap a database.",
  "body": "## Elizabeth\r\n[![Build Status](https://travis-ci.org/lk-geimfari/elizabeth.svg?branch=master)](https://travis-ci.org/lk-geimfari/elizabeth)\r\n[![Documentation Status](https://readthedocs.org/projects/elizabeth/badge/?version=latest)](http://elizabeth.readthedocs.io/en/latest/?badge=latest)\r\n[![PyPI version](https://badge.fury.io/py/elizabeth.svg)](https://badge.fury.io/py/elizabeth)\r\n[![Python Version](https://img.shields.io/badge/python-v3.3%2C%20v3.4%2C%20v3.5%2C%20v3.6-brightgreen.svg)](https://github.com/lk-geimfari/elizabeth/)\r\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/d773f20efa67430683bb24fff5af9db8)](https://www.codacy.com/app/likid-geimfari/church)\r\n\r\n\r\nElizabeth is a library to generate dummy data. It's very useful when you need to bootstrap your database. Elizabeth doesn't have any dependencies.\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://raw.githubusercontent.com/lk-geimfari/elizabeth/master/other/elizabeth_1.png\">\r\n  <br>\r\n</p>\r\n\r\n\r\n\r\n## Documentation\r\nElizabeth is a pretty simple library and all you need to start is the small documentation. See Elizabeth's Sphinx-generated documentation here: [http://elizabeth.readthedocs.io/en/latest/](http://elizabeth.readthedocs.io/en/latest/)\r\n\r\n## Locales\r\n\r\nAt this moment a library has 15 supported locales:\r\n - da\r\n - de\r\n - en\r\n - es\r\n - fi\r\n - fr\r\n - is\r\n - it\r\n - nl\r\n - no\r\n - sv\r\n - ru\r\n - pt\r\n - pt-br\r\n - pl\r\n\r\n\r\n## Installation\r\n```zsh\r\n➜  ~ pip install elizabeth\r\n```\r\n\r\n## Testing\r\n```zsh\r\n➜  ~ git clone https://github.com/lk-geimfari/elizabeth.git\r\n➜  ~ cd elizabeth/\r\n➜  ~ python3 -m unittest discover tests\r\n```\r\n\r\n## Examples\r\n\r\nBelow you can see, how to generate fake paths using `Elizabeth`:\r\n```python\r\n>>> from elizabeth import Path\r\n>>> path = Path()\r\n\r\n>>> path.root\r\n'/'\r\n\r\n>>> path.home\r\n'/home/'\r\n\r\n>>> path.user(gender='female')\r\n'/home/chieko'\r\n\r\n>>> path.users_folder(user_gender='male')\r\n'/home/lyndon/Documents'\r\n\r\n>>> path.dev_dir(user_gender='female')\r\n'/home/edra/Development/Ruby'\r\n\r\n>>> path.project_dir(user_gender='female')\r\n'/home/katharina/Development/C Shell/litany'\r\n```\r\nor how to generate dummy model of transport:\r\n```python\r\n>>> from elizabeth import Transport\r\n>>> transport = Transport()\r\n\r\n>>> transport.truck()\r\n'Union-0632 FX'\r\n\r\n>>> transport.truck(model_mask=\"##/@\")\r\n'Jiaotong-78/P'\r\n\r\n>>> transport.car()\r\n'Pontiac Grand Am'\r\n\r\n>>> transport.airplane()\r\n'Boeing 575'\r\n\r\n>>> transport.airplane(model_mask=\"7##\")\r\n'Airbus 778'\r\n```\r\n\r\nWhen you use only one locale you can use the `Generic` , that provides all providers at one class.\r\n\r\nThis is a contrived example, but it illustrates how this works.\r\n\r\n```python\r\nfrom elizabeth import Generic\r\n\r\nel = Generic('en')\r\n\r\n\r\ndef patient(gender='female'):\r\n    patient_card = {\r\n        'full_name': el.personal.full_name(gender=gender),\r\n        'gender': el.personal.gender(gender=gender),\r\n        'blood_type': el.person.blood_type(),\r\n        'birthday': el.datetime.birthday()\r\n    }\r\nreturn patient_card\r\n```\r\n\r\n## Data providers\r\n\r\n| Provider        | Description                                                  |\r\n| -------------   |:-------------                                                |\r\n| Address         | *Address data (street name, street suffix etc.)*             |\r\n| Business        | *Business data (company, company_type, copyright etc.)*      |\r\n| Code            | *Codes (ISBN, EAN, IMEI etc.).*                              |\r\n| ClothingSizes   | *Clothing sizes (international sizes, european etc.)*        |\r\n| Datetime        | *Datetime (day_of_week, month, year etc.)*                   |\r\n| Development     | *Data for developers (version, programming language etc.)*   |\r\n| File            | *File data (extension etc.)*                                 |\r\n| Food            | *Information on food (vegetables, fruits, measurements etc.)*|\r\n| Personal        | *Personal data (name, surname, age, email etc.)*             |\r\n| Text            | *Text data (sentence, title etc.)*                           |\r\n| Transport       | *Dummy data about transport (truck model, car etc.)*         |\r\n| Network         | *Network data (IPv4, IPv6, MAC address) etc*                 |\r\n| Science         | *Scientific data (scientist, math_formula etc.)*             |\r\n| Internet        | *Dummy internet data (facebook, twitter etc.)*                |\r\n| Hardware        | *The data about the hardware (resolution, cpu, graphics etc.)*|\r\n| Numbers         | *Numerical data (floats, primes, digit etc.)*                 |\r\n| Path            | *Provides methods and property for generate paths.*           |\r\n| Generic         | *All at one*                                                  |\r\n\r\n\r\n## Contributing\r\nYour contributions are always welcome! Please take a look at the [contribution](https://github.com/lk-geimfari/elizabeth/blob/master/CONTRIBUTING.md) guidelines first. [Here](https://github.com/lk-geimfari/elizabeth/blob/master/CONTRIBUTING.md) you can look a list of contributors\r\n\r\n\r\n## Disclaimer\r\nThe author does not assume any responsibility for how you will use this library and how you will use data generated with this library. This library is designed only for developers and only with good intentions. Do not use the data generated with `Elizabeth` for illegal purposes.\r\n\r\n\r\n## Licence\r\nElizabeth is licensed under the MIT License. See [LICENSE](https://github.com/lk-geimfari/elizabeth/blob/master/LICENSE)  for the full license text.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}